// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: grpc_node_protocol/nodeprotocol.proto

package grpc_node_protocol

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Define some ENUMS
type CommandStatusEnum int32

const (
	CommandStatusEnum_COMMAND_DEFINED CommandStatusEnum = 0
	CommandStatusEnum_COMMAND_QUEUED  CommandStatusEnum = 1
	CommandStatusEnum_COMMAND_RUNNING CommandStatusEnum = 2
	CommandStatusEnum_COMMAND_KILLING CommandStatusEnum = 3
	CommandStatusEnum_COMMAND_DONE    CommandStatusEnum = 4
	CommandStatusEnum_COMMAND_PANIC   CommandStatusEnum = 5
)

// Enum value maps for CommandStatusEnum.
var (
	CommandStatusEnum_name = map[int32]string{
		0: "COMMAND_DEFINED",
		1: "COMMAND_QUEUED",
		2: "COMMAND_RUNNING",
		3: "COMMAND_KILLING",
		4: "COMMAND_DONE",
		5: "COMMAND_PANIC",
	}
	CommandStatusEnum_value = map[string]int32{
		"COMMAND_DEFINED": 0,
		"COMMAND_QUEUED":  1,
		"COMMAND_RUNNING": 2,
		"COMMAND_KILLING": 3,
		"COMMAND_DONE":    4,
		"COMMAND_PANIC":   5,
	}
)

func (x CommandStatusEnum) Enum() *CommandStatusEnum {
	p := new(CommandStatusEnum)
	*p = x
	return p
}

func (x CommandStatusEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandStatusEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_node_protocol_nodeprotocol_proto_enumTypes[0].Descriptor()
}

func (CommandStatusEnum) Type() protoreflect.EnumType {
	return &file_grpc_node_protocol_nodeprotocol_proto_enumTypes[0]
}

func (x CommandStatusEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandStatusEnum.Descriptor instead.
func (CommandStatusEnum) EnumDescriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{0}
}

type PackageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageURI string `protobuf:"bytes,1,opt,name=PackageURI,proto3" json:"PackageURI,omitempty"`
}

func (x *PackageRequest) Reset() {
	*x = PackageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageRequest) ProtoMessage() {}

func (x *PackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageRequest.ProtoReflect.Descriptor instead.
func (*PackageRequest) Descriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{0}
}

func (x *PackageRequest) GetPackageURI() string {
	if x != nil {
		return x.PackageURI
	}
	return ""
}

type PackageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *PackageResponse) Reset() {
	*x = PackageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageResponse) ProtoMessage() {}

func (x *PackageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageResponse.ProtoReflect.Descriptor instead.
func (*PackageResponse) Descriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{1}
}

func (x *PackageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PackageResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type PackageList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageURIs []string `protobuf:"bytes,1,rep,name=PackageURIs,proto3" json:"PackageURIs,omitempty"`
}

func (x *PackageList) Reset() {
	*x = PackageList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageList) ProtoMessage() {}

func (x *PackageList) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageList.ProtoReflect.Descriptor instead.
func (*PackageList) Descriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{2}
}

func (x *PackageList) GetPackageURIs() []string {
	if x != nil {
		return x.PackageURIs
	}
	return nil
}

type CallbackRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallbackURI string `protobuf:"bytes,1,opt,name=CallbackURI,proto3" json:"CallbackURI,omitempty"`
}

func (x *CallbackRegistration) Reset() {
	*x = CallbackRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackRegistration) ProtoMessage() {}

func (x *CallbackRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackRegistration.ProtoReflect.Descriptor instead.
func (*CallbackRegistration) Descriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{3}
}

func (x *CallbackRegistration) GetCallbackURI() string {
	if x != nil {
		return x.CallbackURI
	}
	return ""
}

type CallbackHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallbackID string `protobuf:"bytes,1,opt,name=CallbackID,proto3" json:"CallbackID,omitempty"`
}

func (x *CallbackHandler) Reset() {
	*x = CallbackHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackHandler) ProtoMessage() {}

func (x *CallbackHandler) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackHandler.ProtoReflect.Descriptor instead.
func (*CallbackHandler) Descriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{4}
}

func (x *CallbackHandler) GetCallbackID() string {
	if x != nil {
		return x.CallbackID
	}
	return ""
}

type CommandRequestChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallableBinaryChunk  []byte            `protobuf:"bytes,1,opt,name=CallableBinaryChunk,proto3" json:"CallableBinaryChunk,omitempty"`
	ArgumentsBinaryChunk map[uint32][]byte `protobuf:"bytes,2,rep,name=ArgumentsBinaryChunk,proto3" json:"ArgumentsBinaryChunk,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	KwargsBinaryChunk    map[string][]byte `protobuf:"bytes,3,rep,name=KwargsBinaryChunk,proto3" json:"KwargsBinaryChunk,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CommandRequestChunk) Reset() {
	*x = CommandRequestChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRequestChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequestChunk) ProtoMessage() {}

func (x *CommandRequestChunk) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequestChunk.ProtoReflect.Descriptor instead.
func (*CommandRequestChunk) Descriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{5}
}

func (x *CommandRequestChunk) GetCallableBinaryChunk() []byte {
	if x != nil {
		return x.CallableBinaryChunk
	}
	return nil
}

func (x *CommandRequestChunk) GetArgumentsBinaryChunk() map[uint32][]byte {
	if x != nil {
		return x.ArgumentsBinaryChunk
	}
	return nil
}

func (x *CommandRequestChunk) GetKwargsBinaryChunk() map[string][]byte {
	if x != nil {
		return x.KwargsBinaryChunk
	}
	return nil
}

type CommandHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandID string `protobuf:"bytes,1,opt,name=CommandID,proto3" json:"CommandID,omitempty"`
}

func (x *CommandHandler) Reset() {
	*x = CommandHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandHandler) ProtoMessage() {}

func (x *CommandHandler) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandHandler.ProtoReflect.Descriptor instead.
func (*CommandHandler) Descriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{6}
}

func (x *CommandHandler) GetCommandID() string {
	if x != nil {
		return x.CommandID
	}
	return ""
}

type CommandStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandID     string            `protobuf:"bytes,1,opt,name=CommandID,proto3" json:"CommandID,omitempty"`
	CommandStatus CommandStatusEnum `protobuf:"varint,2,opt,name=CommandStatus,proto3,enum=proto.CommandStatusEnum" json:"CommandStatus,omitempty"`
}

func (x *CommandStatus) Reset() {
	*x = CommandStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandStatus) ProtoMessage() {}

func (x *CommandStatus) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandStatus.ProtoReflect.Descriptor instead.
func (*CommandStatus) Descriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{7}
}

func (x *CommandStatus) GetCommandID() string {
	if x != nil {
		return x.CommandID
	}
	return ""
}

func (x *CommandStatus) GetCommandStatus() CommandStatusEnum {
	if x != nil {
		return x.CommandStatus
	}
	return CommandStatusEnum_COMMAND_DEFINED
}

type CommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandHandler  *CommandHandler  `protobuf:"bytes,1,opt,name=CommandHandler,proto3" json:"CommandHandler,omitempty"`
	CallbackHandler *CallbackHandler `protobuf:"bytes,2,opt,name=CallbackHandler,proto3" json:"CallbackHandler,omitempty"`
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{8}
}

func (x *CommandRequest) GetCommandHandler() *CommandHandler {
	if x != nil {
		return x.CommandHandler
	}
	return nil
}

func (x *CommandRequest) GetCallbackHandler() *CallbackHandler {
	if x != nil {
		return x.CallbackHandler
	}
	return nil
}

type CommandRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,3,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrorMessage string `protobuf:"bytes,4,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *CommandRequestResponse) Reset() {
	*x = CommandRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequestResponse) ProtoMessage() {}

func (x *CommandRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequestResponse.ProtoReflect.Descriptor instead.
func (*CommandRequestResponse) Descriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{9}
}

func (x *CommandRequestResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommandRequestResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type CommandOutputChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandID               string `protobuf:"bytes,1,opt,name=CommandID,proto3" json:"CommandID,omitempty"`
	ObjectReturnBinaryChunk []byte `protobuf:"bytes,2,opt,name=ObjectReturnBinaryChunk,proto3" json:"ObjectReturnBinaryChunk,omitempty"`
	StdoutBinaryChunk       []byte `protobuf:"bytes,3,opt,name=StdoutBinaryChunk,proto3" json:"StdoutBinaryChunk,omitempty"`
	StderrBinaryChunk       []byte `protobuf:"bytes,4,opt,name=StderrBinaryChunk,proto3" json:"StderrBinaryChunk,omitempty"`
	Success                 bool   `protobuf:"varint,5,opt,name=Success,proto3" json:"Success,omitempty"`
	Panic                   bool   `protobuf:"varint,6,opt,name=Panic,proto3" json:"Panic,omitempty"`
	ErrorMessage            string `protobuf:"bytes,7,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *CommandOutputChunk) Reset() {
	*x = CommandOutputChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandOutputChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandOutputChunk) ProtoMessage() {}

func (x *CommandOutputChunk) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandOutputChunk.ProtoReflect.Descriptor instead.
func (*CommandOutputChunk) Descriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{10}
}

func (x *CommandOutputChunk) GetCommandID() string {
	if x != nil {
		return x.CommandID
	}
	return ""
}

func (x *CommandOutputChunk) GetObjectReturnBinaryChunk() []byte {
	if x != nil {
		return x.ObjectReturnBinaryChunk
	}
	return nil
}

func (x *CommandOutputChunk) GetStdoutBinaryChunk() []byte {
	if x != nil {
		return x.StdoutBinaryChunk
	}
	return nil
}

func (x *CommandOutputChunk) GetStderrBinaryChunk() []byte {
	if x != nil {
		return x.StderrBinaryChunk
	}
	return nil
}

func (x *CommandOutputChunk) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommandOutputChunk) GetPanic() bool {
	if x != nil {
		return x.Panic
	}
	return false
}

func (x *CommandOutputChunk) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type Ack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *Ack) Reset() {
	*x = Ack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_node_protocol_nodeprotocol_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP(), []int{11}
}

func (x *Ack) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Ack) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_grpc_node_protocol_nodeprotocol_proto protoreflect.FileDescriptor

var file_grpc_node_protocol_nodeprotocol_proto_rawDesc = []byte{
	0x0a, 0x25, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x0e, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x52, 0x49, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x52, 0x49, 0x22, 0x4f, 0x0a,
	0x0f, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2f,
	0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x52, 0x49, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x52, 0x49, 0x73, 0x22,
	0x38, 0x0a, 0x14, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x55, 0x52, 0x49, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x52, 0x49, 0x22, 0x31, 0x0a, 0x0f, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x44, 0x22, 0xa1, 0x03, 0x0a,
	0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x12, 0x30, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x13, 0x43, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x68, 0x0a, 0x14, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x41, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x12, 0x5f, 0x0a, 0x11, 0x4b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x4b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11,
	0x4b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x1a, 0x47, 0x0a, 0x19, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x69,
	0x6e, 0x61, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x16, 0x4b, 0x77,
	0x61, 0x72, 0x67, 0x73, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x2e, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44,
	0x22, 0x6d, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x12,
	0x3e, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x91, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x12, 0x40, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x52, 0x0f, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9c, 0x02, 0x0a, 0x12,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x44,
	0x12, 0x38, 0x0a, 0x17, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x17, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x42,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x74,
	0x64, 0x6f, 0x75, 0x74, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x42, 0x69, 0x6e,
	0x61, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x74, 0x64, 0x65,
	0x72, 0x72, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x11, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x42, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x6e, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x50, 0x61, 0x6e, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x03, 0x41, 0x63,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a,
	0x8b, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44,
	0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f,
	0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x4b,
	0x49, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4d, 0x4d,
	0x41, 0x4e, 0x44, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f,
	0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x41, 0x4e, 0x49, 0x43, 0x10, 0x05, 0x32, 0x40, 0x0a,
	0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x1a, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x22, 0x00, 0x32,
	0xf4, 0x04, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x10, 0x55,
	0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x12, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x1a, 0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x22, 0x00, 0x28, 0x01, 0x12,
	0x44, 0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x4b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x22, 0x00, 0x30, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_node_protocol_nodeprotocol_proto_rawDescOnce sync.Once
	file_grpc_node_protocol_nodeprotocol_proto_rawDescData = file_grpc_node_protocol_nodeprotocol_proto_rawDesc
)

func file_grpc_node_protocol_nodeprotocol_proto_rawDescGZIP() []byte {
	file_grpc_node_protocol_nodeprotocol_proto_rawDescOnce.Do(func() {
		file_grpc_node_protocol_nodeprotocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_node_protocol_nodeprotocol_proto_rawDescData)
	})
	return file_grpc_node_protocol_nodeprotocol_proto_rawDescData
}

var file_grpc_node_protocol_nodeprotocol_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grpc_node_protocol_nodeprotocol_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_grpc_node_protocol_nodeprotocol_proto_goTypes = []any{
	(CommandStatusEnum)(0),         // 0: proto.CommandStatusEnum
	(*PackageRequest)(nil),         // 1: proto.PackageRequest
	(*PackageResponse)(nil),        // 2: proto.PackageResponse
	(*PackageList)(nil),            // 3: proto.PackageList
	(*CallbackRegistration)(nil),   // 4: proto.CallbackRegistration
	(*CallbackHandler)(nil),        // 5: proto.CallbackHandler
	(*CommandRequestChunk)(nil),    // 6: proto.CommandRequestChunk
	(*CommandHandler)(nil),         // 7: proto.CommandHandler
	(*CommandStatus)(nil),          // 8: proto.CommandStatus
	(*CommandRequest)(nil),         // 9: proto.CommandRequest
	(*CommandRequestResponse)(nil), // 10: proto.CommandRequestResponse
	(*CommandOutputChunk)(nil),     // 11: proto.CommandOutputChunk
	(*Ack)(nil),                    // 12: proto.Ack
	nil,                            // 13: proto.CommandRequestChunk.ArgumentsBinaryChunkEntry
	nil,                            // 14: proto.CommandRequestChunk.KwargsBinaryChunkEntry
	(*empty.Empty)(nil),            // 15: google.protobuf.Empty
}
var file_grpc_node_protocol_nodeprotocol_proto_depIdxs = []int32{
	13, // 0: proto.CommandRequestChunk.ArgumentsBinaryChunk:type_name -> proto.CommandRequestChunk.ArgumentsBinaryChunkEntry
	14, // 1: proto.CommandRequestChunk.KwargsBinaryChunk:type_name -> proto.CommandRequestChunk.KwargsBinaryChunkEntry
	0,  // 2: proto.CommandStatus.CommandStatus:type_name -> proto.CommandStatusEnum
	7,  // 3: proto.CommandRequest.CommandHandler:type_name -> proto.CommandHandler
	5,  // 4: proto.CommandRequest.CallbackHandler:type_name -> proto.CallbackHandler
	8,  // 5: proto.NodeController.Callback:input_type -> proto.CommandStatus
	1,  // 6: proto.Node.InstallPackage:input_type -> proto.PackageRequest
	1,  // 7: proto.Node.UninstallPackage:input_type -> proto.PackageRequest
	15, // 8: proto.Node.ListPackages:input_type -> google.protobuf.Empty
	4,  // 9: proto.Node.RegisterCallback:input_type -> proto.CallbackRegistration
	5,  // 10: proto.Node.UnregisterCallback:input_type -> proto.CallbackHandler
	6,  // 11: proto.Node.RegisterCommand:input_type -> proto.CommandRequestChunk
	9,  // 12: proto.Node.RunCommand:input_type -> proto.CommandRequest
	9,  // 13: proto.Node.KillCommand:input_type -> proto.CommandRequest
	7,  // 14: proto.Node.GetCommandOutput:input_type -> proto.CommandHandler
	12, // 15: proto.NodeController.Callback:output_type -> proto.Ack
	2,  // 16: proto.Node.InstallPackage:output_type -> proto.PackageResponse
	2,  // 17: proto.Node.UninstallPackage:output_type -> proto.PackageResponse
	3,  // 18: proto.Node.ListPackages:output_type -> proto.PackageList
	5,  // 19: proto.Node.RegisterCallback:output_type -> proto.CallbackHandler
	12, // 20: proto.Node.UnregisterCallback:output_type -> proto.Ack
	7,  // 21: proto.Node.RegisterCommand:output_type -> proto.CommandHandler
	10, // 22: proto.Node.RunCommand:output_type -> proto.CommandRequestResponse
	10, // 23: proto.Node.KillCommand:output_type -> proto.CommandRequestResponse
	11, // 24: proto.Node.GetCommandOutput:output_type -> proto.CommandOutputChunk
	15, // [15:25] is the sub-list for method output_type
	5,  // [5:15] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_grpc_node_protocol_nodeprotocol_proto_init() }
func file_grpc_node_protocol_nodeprotocol_proto_init() {
	if File_grpc_node_protocol_nodeprotocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_node_protocol_nodeprotocol_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PackageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_node_protocol_nodeprotocol_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PackageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_node_protocol_nodeprotocol_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PackageList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_node_protocol_nodeprotocol_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CallbackRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_node_protocol_nodeprotocol_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CallbackHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_node_protocol_nodeprotocol_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CommandRequestChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_node_protocol_nodeprotocol_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CommandHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_node_protocol_nodeprotocol_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CommandStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_node_protocol_nodeprotocol_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_node_protocol_nodeprotocol_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CommandRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_node_protocol_nodeprotocol_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CommandOutputChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_node_protocol_nodeprotocol_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Ack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_node_protocol_nodeprotocol_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_grpc_node_protocol_nodeprotocol_proto_goTypes,
		DependencyIndexes: file_grpc_node_protocol_nodeprotocol_proto_depIdxs,
		EnumInfos:         file_grpc_node_protocol_nodeprotocol_proto_enumTypes,
		MessageInfos:      file_grpc_node_protocol_nodeprotocol_proto_msgTypes,
	}.Build()
	File_grpc_node_protocol_nodeprotocol_proto = out.File
	file_grpc_node_protocol_nodeprotocol_proto_rawDesc = nil
	file_grpc_node_protocol_nodeprotocol_proto_goTypes = nil
	file_grpc_node_protocol_nodeprotocol_proto_depIdxs = nil
}
