// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: grpc_ce_protocol/ceprotocol.proto

package grpc_ce_protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// While executing a task set, the server will stream back progress reports
// --> OnTaskSetProgress
// --> OnTaskGroupProgress
// --> OnTaskProgress
type ProgressType int32

const (
	ProgressType_TaskSetProgress   ProgressType = 0
	ProgressType_TaskGroupProgress ProgressType = 1
	ProgressType_TaskProgress      ProgressType = 2
)

// Enum value maps for ProgressType.
var (
	ProgressType_name = map[int32]string{
		0: "TaskSetProgress",
		1: "TaskGroupProgress",
		2: "TaskProgress",
	}
	ProgressType_value = map[string]int32{
		"TaskSetProgress":   0,
		"TaskGroupProgress": 1,
		"TaskProgress":      2,
	}
)

func (x ProgressType) Enum() *ProgressType {
	p := new(ProgressType)
	*p = x
	return p
}

func (x ProgressType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProgressType) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_ce_protocol_ceprotocol_proto_enumTypes[0].Descriptor()
}

func (ProgressType) Type() protoreflect.EnumType {
	return &file_grpc_ce_protocol_ceprotocol_proto_enumTypes[0]
}

func (x ProgressType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProgressType.Descriptor instead.
func (ProgressType) EnumDescriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{0}
}

// Session
type SessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options map[string]string `protobuf:"bytes,1,rep,name=Options,proto3" json:"Options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SessionRequest) Reset() {
	*x = SessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRequest) ProtoMessage() {}

func (x *SessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRequest.ProtoReflect.Descriptor instead.
func (*SessionRequest) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{0}
}

func (x *SessionRequest) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type SessionHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Success   bool   `protobuf:"varint,2,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *SessionHandler) Reset() {
	*x = SessionHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionHandler) ProtoMessage() {}

func (x *SessionHandler) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionHandler.ProtoReflect.Descriptor instead.
func (*SessionHandler) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{1}
}

func (x *SessionHandler) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SessionHandler) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type InstanceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceID string `protobuf:"bytes,1,opt,name=InstanceID,proto3" json:"InstanceID,omitempty"`
}

func (x *InstanceMetadata) Reset() {
	*x = InstanceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceMetadata) ProtoMessage() {}

func (x *InstanceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceMetadata.ProtoReflect.Descriptor instead.
func (*InstanceMetadata) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{2}
}

func (x *InstanceMetadata) GetInstanceID() string {
	if x != nil {
		return x.InstanceID
	}
	return ""
}

// Task definitions
type TaskDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	CallableBlock   string            `protobuf:"bytes,2,opt,name=CallableBlock,proto3" json:"CallableBlock,omitempty"`
	ArgumentsBlocks map[uint32]string `protobuf:"bytes,3,rep,name=ArgumentsBlocks,proto3" json:"ArgumentsBlocks,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	KwargsBlocks    map[string]string `protobuf:"bytes,4,rep,name=KwargsBlocks,proto3" json:"KwargsBlocks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TaskDefinition) Reset() {
	*x = TaskDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDefinition) ProtoMessage() {}

func (x *TaskDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDefinition.ProtoReflect.Descriptor instead.
func (*TaskDefinition) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{3}
}

func (x *TaskDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskDefinition) GetCallableBlock() string {
	if x != nil {
		return x.CallableBlock
	}
	return ""
}

func (x *TaskDefinition) GetArgumentsBlocks() map[uint32]string {
	if x != nil {
		return x.ArgumentsBlocks
	}
	return nil
}

func (x *TaskDefinition) GetKwargsBlocks() map[string]string {
	if x != nil {
		return x.KwargsBlocks
	}
	return nil
}

type TaskHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID string `protobuf:"bytes,1,opt,name=TaskID,proto3" json:"TaskID,omitempty"`
}

func (x *TaskHandler) Reset() {
	*x = TaskHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskHandler) ProtoMessage() {}

func (x *TaskHandler) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskHandler.ProtoReflect.Descriptor instead.
func (*TaskHandler) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{4}
}

func (x *TaskHandler) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

// Result
type TaskSetHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskSetId string `protobuf:"bytes,1,opt,name=taskSetId,proto3" json:"taskSetId,omitempty"`
	Success   bool   `protobuf:"varint,2,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *TaskSetHandler) Reset() {
	*x = TaskSetHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskSetHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSetHandler) ProtoMessage() {}

func (x *TaskSetHandler) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSetHandler.ProtoReflect.Descriptor instead.
func (*TaskSetHandler) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{5}
}

func (x *TaskSetHandler) GetTaskSetId() string {
	if x != nil {
		return x.TaskSetId
	}
	return ""
}

func (x *TaskSetHandler) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type TaskSetStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskSetID     string `protobuf:"bytes,1,opt,name=TaskSetID,proto3" json:"TaskSetID,omitempty"`
	TaskSetStatus string `protobuf:"bytes,2,opt,name=TaskSetStatus,proto3" json:"TaskSetStatus,omitempty"`
}

func (x *TaskSetStatus) Reset() {
	*x = TaskSetStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskSetStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSetStatus) ProtoMessage() {}

func (x *TaskSetStatus) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSetStatus.ProtoReflect.Descriptor instead.
func (*TaskSetStatus) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{6}
}

func (x *TaskSetStatus) GetTaskSetID() string {
	if x != nil {
		return x.TaskSetID
	}
	return ""
}

func (x *TaskSetStatus) GetTaskSetStatus() string {
	if x != nil {
		return x.TaskSetStatus
	}
	return ""
}

type TaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskRunID         string `protobuf:"bytes,1,opt,name=TaskRunID,proto3" json:"TaskRunID,omitempty"`
	ObjectReturnBlock string `protobuf:"bytes,2,opt,name=ObjectReturnBlock,proto3" json:"ObjectReturnBlock,omitempty"`
	StdoutBlock       string `protobuf:"bytes,3,opt,name=StdoutBlock,proto3" json:"StdoutBlock,omitempty"`
	StderrBlock       string `protobuf:"bytes,4,opt,name=StderrBlock,proto3" json:"StderrBlock,omitempty"`
	Success           bool   `protobuf:"varint,5,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{7}
}

func (x *TaskResult) GetTaskRunID() string {
	if x != nil {
		return x.TaskRunID
	}
	return ""
}

func (x *TaskResult) GetObjectReturnBlock() string {
	if x != nil {
		return x.ObjectReturnBlock
	}
	return ""
}

func (x *TaskResult) GetStdoutBlock() string {
	if x != nil {
		return x.StdoutBlock
	}
	return ""
}

func (x *TaskResult) GetStderrBlock() string {
	if x != nil {
		return x.StderrBlock
	}
	return ""
}

func (x *TaskResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type TaskSetResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskSetID      string        `protobuf:"bytes,1,opt,name=TaskSetID,proto3" json:"TaskSetID,omitempty"`
	OverallSuccess bool          `protobuf:"varint,2,opt,name=OverallSuccess,proto3" json:"OverallSuccess,omitempty"`
	TaskResults    []*TaskResult `protobuf:"bytes,3,rep,name=TaskResults,proto3" json:"TaskResults,omitempty"`
}

func (x *TaskSetResult) Reset() {
	*x = TaskSetResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskSetResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSetResult) ProtoMessage() {}

func (x *TaskSetResult) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSetResult.ProtoReflect.Descriptor instead.
func (*TaskSetResult) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{8}
}

func (x *TaskSetResult) GetTaskSetID() string {
	if x != nil {
		return x.TaskSetID
	}
	return ""
}

func (x *TaskSetResult) GetOverallSuccess() bool {
	if x != nil {
		return x.OverallSuccess
	}
	return false
}

func (x *TaskSetResult) GetTaskResults() []*TaskResult {
	if x != nil {
		return x.TaskResults
	}
	return nil
}

type TaskAdderResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	ErrorMesssage string `protobuf:"bytes,2,opt,name=ErrorMesssage,proto3" json:"ErrorMesssage,omitempty"`
}

func (x *TaskAdderResult) Reset() {
	*x = TaskAdderResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAdderResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAdderResult) ProtoMessage() {}

func (x *TaskAdderResult) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAdderResult.ProtoReflect.Descriptor instead.
func (*TaskAdderResult) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{9}
}

func (x *TaskAdderResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TaskAdderResult) GetErrorMesssage() string {
	if x != nil {
		return x.ErrorMesssage
	}
	return ""
}

type MapAdder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskSetHandler    *TaskSetHandler `protobuf:"bytes,1,opt,name=taskSetHandler,proto3" json:"taskSetHandler,omitempty"`
	MappersDefinition []*TaskHandler  `protobuf:"bytes,2,rep,name=MappersDefinition,proto3" json:"MappersDefinition,omitempty"`
}

func (x *MapAdder) Reset() {
	*x = MapAdder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapAdder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapAdder) ProtoMessage() {}

func (x *MapAdder) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapAdder.ProtoReflect.Descriptor instead.
func (*MapAdder) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{10}
}

func (x *MapAdder) GetTaskSetHandler() *TaskSetHandler {
	if x != nil {
		return x.TaskSetHandler
	}
	return nil
}

func (x *MapAdder) GetMappersDefinition() []*TaskHandler {
	if x != nil {
		return x.MappersDefinition
	}
	return nil
}

type ReduceAdder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskSetHandler    *TaskSetHandler `protobuf:"bytes,1,opt,name=taskSetHandler,proto3" json:"taskSetHandler,omitempty"`
	ReducerDefinition *TaskHandler    `protobuf:"bytes,2,opt,name=ReducerDefinition,proto3" json:"ReducerDefinition,omitempty"`
}

func (x *ReduceAdder) Reset() {
	*x = ReduceAdder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceAdder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceAdder) ProtoMessage() {}

func (x *ReduceAdder) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceAdder.ProtoReflect.Descriptor instead.
func (*ReduceAdder) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{11}
}

func (x *ReduceAdder) GetTaskSetHandler() *TaskSetHandler {
	if x != nil {
		return x.TaskSetHandler
	}
	return nil
}

func (x *ReduceAdder) GetReducerDefinition() *TaskHandler {
	if x != nil {
		return x.ReducerDefinition
	}
	return nil
}

type TransformAdder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskSetHandler        *TaskSetHandler `protobuf:"bytes,1,opt,name=taskSetHandler,proto3" json:"taskSetHandler,omitempty"`
	TransformerDefinition *TaskHandler    `protobuf:"bytes,2,opt,name=TransformerDefinition,proto3" json:"TransformerDefinition,omitempty"`
}

func (x *TransformAdder) Reset() {
	*x = TransformAdder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransformAdder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformAdder) ProtoMessage() {}

func (x *TransformAdder) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformAdder.ProtoReflect.Descriptor instead.
func (*TransformAdder) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{12}
}

func (x *TransformAdder) GetTaskSetHandler() *TaskSetHandler {
	if x != nil {
		return x.TaskSetHandler
	}
	return nil
}

func (x *TransformAdder) GetTransformerDefinition() *TaskHandler {
	if x != nil {
		return x.TransformerDefinition
	}
	return nil
}

type TaskSetProgressReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskSetHandler  *TaskSetHandler   `protobuf:"bytes,1,opt,name=taskSetHandler,proto3" json:"taskSetHandler,omitempty"`
	ProgressType    ProgressType      `protobuf:"varint,2,opt,name=ProgressType,proto3,enum=proto.ProgressType" json:"ProgressType,omitempty"`
	RelatedID       string            `protobuf:"bytes,3,opt,name=RelatedID,proto3" json:"RelatedID,omitempty"`
	ProgressMessage string            `protobuf:"bytes,4,opt,name=ProgressMessage,proto3" json:"ProgressMessage,omitempty"`
	StatusMessage   string            `protobuf:"bytes,5,opt,name=StatusMessage,proto3" json:"StatusMessage,omitempty"`
	ProgressDetails map[string]string `protobuf:"bytes,6,rep,name=ProgressDetails,proto3" json:"ProgressDetails,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // This is an arbitrary key-value pair to provide more information
}

func (x *TaskSetProgressReport) Reset() {
	*x = TaskSetProgressReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskSetProgressReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskSetProgressReport) ProtoMessage() {}

func (x *TaskSetProgressReport) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskSetProgressReport.ProtoReflect.Descriptor instead.
func (*TaskSetProgressReport) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{13}
}

func (x *TaskSetProgressReport) GetTaskSetHandler() *TaskSetHandler {
	if x != nil {
		return x.TaskSetHandler
	}
	return nil
}

func (x *TaskSetProgressReport) GetProgressType() ProgressType {
	if x != nil {
		return x.ProgressType
	}
	return ProgressType_TaskSetProgress
}

func (x *TaskSetProgressReport) GetRelatedID() string {
	if x != nil {
		return x.RelatedID
	}
	return ""
}

func (x *TaskSetProgressReport) GetProgressMessage() string {
	if x != nil {
		return x.ProgressMessage
	}
	return ""
}

func (x *TaskSetProgressReport) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *TaskSetProgressReport) GetProgressDetails() map[string]string {
	if x != nil {
		return x.ProgressDetails
	}
	return nil
}

// Block Proxy
type ProxyBlockChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandler *SessionHandler `protobuf:"bytes,1,opt,name=SessionHandler,proto3" json:"SessionHandler,omitempty"`
	BlockChunk     []byte          `protobuf:"bytes,2,opt,name=BlockChunk,proto3" json:"BlockChunk,omitempty"`
}

func (x *ProxyBlockChunk) Reset() {
	*x = ProxyBlockChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyBlockChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyBlockChunk) ProtoMessage() {}

func (x *ProxyBlockChunk) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyBlockChunk.ProtoReflect.Descriptor instead.
func (*ProxyBlockChunk) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{14}
}

func (x *ProxyBlockChunk) GetSessionHandler() *SessionHandler {
	if x != nil {
		return x.SessionHandler
	}
	return nil
}

func (x *ProxyBlockChunk) GetBlockChunk() []byte {
	if x != nil {
		return x.BlockChunk
	}
	return nil
}

type ProxyBlockHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionHandler *SessionHandler `protobuf:"bytes,1,opt,name=SessionHandler,proto3" json:"SessionHandler,omitempty"`
	BlockID        string          `protobuf:"bytes,2,opt,name=BlockID,proto3" json:"BlockID,omitempty"`
}

func (x *ProxyBlockHandler) Reset() {
	*x = ProxyBlockHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyBlockHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyBlockHandler) ProtoMessage() {}

func (x *ProxyBlockHandler) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_ce_protocol_ceprotocol_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyBlockHandler.ProtoReflect.Descriptor instead.
func (*ProxyBlockHandler) Descriptor() ([]byte, []int) {
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP(), []int{15}
}

func (x *ProxyBlockHandler) GetSessionHandler() *SessionHandler {
	if x != nil {
		return x.SessionHandler
	}
	return nil
}

func (x *ProxyBlockHandler) GetBlockID() string {
	if x != nil {
		return x.BlockID
	}
	return ""
}

var File_grpc_ce_protocol_ceprotocol_proto protoreflect.FileDescriptor

var file_grpc_ce_protocol_ceprotocol_proto_rawDesc = []byte{
	0x0a, 0x21, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x0e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x48, 0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x32, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x44, 0x22, 0xf2, 0x02, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x54, 0x0a, 0x0f, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x4b, 0x0a, 0x0c, 0x4b, 0x77, 0x61, 0x72,
	0x67, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x4b, 0x77, 0x61, 0x72, 0x67, 0x73, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x4b, 0x77, 0x61,
	0x72, 0x67, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x25, 0x0a, 0x0b, 0x54, 0x61,
	0x73, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x22, 0x48, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x53, 0x0a, 0x0d, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xb6, 0x01, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x49, 0x44, 0x12, 0x2c, 0x0a,
	0x11, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x53,
	0x74, 0x64, 0x6f, 0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x0a,
	0x0b, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x0d, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x76, 0x65,
	0x72, 0x61, 0x6c, 0x6c, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x33, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x51, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x64,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x08, 0x4d, 0x61,
	0x70, 0x41, 0x64, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x65,
	0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x11, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x52, 0x11, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x41, 0x64, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x53,
	0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x11, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x11, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x64, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0e, 0x74,
	0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b,
	0x53, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x15, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x15, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x03, 0x0a, 0x15, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3d,
	0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x0e, 0x74,
	0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x37, 0x0a,
	0x0c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x5b, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x1a, 0x42, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x70, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x3d, 0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x6c, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x0e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x44, 0x2a, 0x4c, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x61,
	0x73, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x10, 0x02, 0x32, 0x8e, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x3f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65,
	0x74, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x22,
	0x00, 0x12, 0x41, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x44, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x00, 0x32, 0xba, 0x03, 0x0a, 0x07, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x06, 0x41,
	0x64, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61,
	0x70, 0x41, 0x64, 0x64, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x39, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x12, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x41, 0x64, 0x64, 0x65,
	0x72, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x64,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0c, 0x41,
	0x64, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x64, 0x64,
	0x65, 0x72, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41,
	0x64, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x07,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x1a, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x3b, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x6d, 0x61, 0x6e, 0x74, 0x6c, 0x65, 0x12, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x00, 0x32, 0x90, 0x01, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x12, 0x40, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x40, 0x0a, 0x08, 0x50, 0x75, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x22, 0x00, 0x28, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_ce_protocol_ceprotocol_proto_rawDescOnce sync.Once
	file_grpc_ce_protocol_ceprotocol_proto_rawDescData = file_grpc_ce_protocol_ceprotocol_proto_rawDesc
)

func file_grpc_ce_protocol_ceprotocol_proto_rawDescGZIP() []byte {
	file_grpc_ce_protocol_ceprotocol_proto_rawDescOnce.Do(func() {
		file_grpc_ce_protocol_ceprotocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_ce_protocol_ceprotocol_proto_rawDescData)
	})
	return file_grpc_ce_protocol_ceprotocol_proto_rawDescData
}

var file_grpc_ce_protocol_ceprotocol_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grpc_ce_protocol_ceprotocol_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_grpc_ce_protocol_ceprotocol_proto_goTypes = []any{
	(ProgressType)(0),             // 0: proto.ProgressType
	(*SessionRequest)(nil),        // 1: proto.SessionRequest
	(*SessionHandler)(nil),        // 2: proto.SessionHandler
	(*InstanceMetadata)(nil),      // 3: proto.InstanceMetadata
	(*TaskDefinition)(nil),        // 4: proto.TaskDefinition
	(*TaskHandler)(nil),           // 5: proto.TaskHandler
	(*TaskSetHandler)(nil),        // 6: proto.TaskSetHandler
	(*TaskSetStatus)(nil),         // 7: proto.TaskSetStatus
	(*TaskResult)(nil),            // 8: proto.TaskResult
	(*TaskSetResult)(nil),         // 9: proto.TaskSetResult
	(*TaskAdderResult)(nil),       // 10: proto.TaskAdderResult
	(*MapAdder)(nil),              // 11: proto.MapAdder
	(*ReduceAdder)(nil),           // 12: proto.ReduceAdder
	(*TransformAdder)(nil),        // 13: proto.TransformAdder
	(*TaskSetProgressReport)(nil), // 14: proto.TaskSetProgressReport
	(*ProxyBlockChunk)(nil),       // 15: proto.ProxyBlockChunk
	(*ProxyBlockHandler)(nil),     // 16: proto.ProxyBlockHandler
	nil,                           // 17: proto.SessionRequest.OptionsEntry
	nil,                           // 18: proto.TaskDefinition.ArgumentsBlocksEntry
	nil,                           // 19: proto.TaskDefinition.KwargsBlocksEntry
	nil,                           // 20: proto.TaskSetProgressReport.ProgressDetailsEntry
}
var file_grpc_ce_protocol_ceprotocol_proto_depIdxs = []int32{
	17, // 0: proto.SessionRequest.Options:type_name -> proto.SessionRequest.OptionsEntry
	18, // 1: proto.TaskDefinition.ArgumentsBlocks:type_name -> proto.TaskDefinition.ArgumentsBlocksEntry
	19, // 2: proto.TaskDefinition.KwargsBlocks:type_name -> proto.TaskDefinition.KwargsBlocksEntry
	8,  // 3: proto.TaskSetResult.TaskResults:type_name -> proto.TaskResult
	6,  // 4: proto.MapAdder.taskSetHandler:type_name -> proto.TaskSetHandler
	5,  // 5: proto.MapAdder.MappersDefinition:type_name -> proto.TaskHandler
	6,  // 6: proto.ReduceAdder.taskSetHandler:type_name -> proto.TaskSetHandler
	5,  // 7: proto.ReduceAdder.ReducerDefinition:type_name -> proto.TaskHandler
	6,  // 8: proto.TransformAdder.taskSetHandler:type_name -> proto.TaskSetHandler
	5,  // 9: proto.TransformAdder.TransformerDefinition:type_name -> proto.TaskHandler
	6,  // 10: proto.TaskSetProgressReport.taskSetHandler:type_name -> proto.TaskSetHandler
	0,  // 11: proto.TaskSetProgressReport.ProgressType:type_name -> proto.ProgressType
	20, // 12: proto.TaskSetProgressReport.ProgressDetails:type_name -> proto.TaskSetProgressReport.ProgressDetailsEntry
	2,  // 13: proto.ProxyBlockChunk.SessionHandler:type_name -> proto.SessionHandler
	2,  // 14: proto.ProxyBlockHandler.SessionHandler:type_name -> proto.SessionHandler
	1,  // 15: proto.Session.CreateSession:input_type -> proto.SessionRequest
	2,  // 16: proto.Session.CreateTaskSet:input_type -> proto.SessionHandler
	2,  // 17: proto.Session.CloseSession:input_type -> proto.SessionHandler
	2,  // 18: proto.Session.GetInstanceID:input_type -> proto.SessionHandler
	4,  // 19: proto.TaskSet.DefineTask:input_type -> proto.TaskDefinition
	11, // 20: proto.TaskSet.AddMap:input_type -> proto.MapAdder
	12, // 21: proto.TaskSet.AddReduce:input_type -> proto.ReduceAdder
	13, // 22: proto.TaskSet.AddTransform:input_type -> proto.TransformAdder
	6,  // 23: proto.TaskSet.Execute:input_type -> proto.TaskSetHandler
	6,  // 24: proto.TaskSet.Dismantle:input_type -> proto.TaskSetHandler
	6,  // 25: proto.TaskSet.GetTaskSetResults:input_type -> proto.TaskSetHandler
	16, // 26: proto.BlockProxy.GetBlock:input_type -> proto.ProxyBlockHandler
	15, // 27: proto.BlockProxy.PutBlock:input_type -> proto.ProxyBlockChunk
	2,  // 28: proto.Session.CreateSession:output_type -> proto.SessionHandler
	6,  // 29: proto.Session.CreateTaskSet:output_type -> proto.TaskSetHandler
	2,  // 30: proto.Session.CloseSession:output_type -> proto.SessionHandler
	3,  // 31: proto.Session.GetInstanceID:output_type -> proto.InstanceMetadata
	5,  // 32: proto.TaskSet.DefineTask:output_type -> proto.TaskHandler
	10, // 33: proto.TaskSet.AddMap:output_type -> proto.TaskAdderResult
	10, // 34: proto.TaskSet.AddReduce:output_type -> proto.TaskAdderResult
	10, // 35: proto.TaskSet.AddTransform:output_type -> proto.TaskAdderResult
	14, // 36: proto.TaskSet.Execute:output_type -> proto.TaskSetProgressReport
	6,  // 37: proto.TaskSet.Dismantle:output_type -> proto.TaskSetHandler
	9,  // 38: proto.TaskSet.GetTaskSetResults:output_type -> proto.TaskSetResult
	15, // 39: proto.BlockProxy.GetBlock:output_type -> proto.ProxyBlockChunk
	16, // 40: proto.BlockProxy.PutBlock:output_type -> proto.ProxyBlockHandler
	28, // [28:41] is the sub-list for method output_type
	15, // [15:28] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_grpc_ce_protocol_ceprotocol_proto_init() }
func file_grpc_ce_protocol_ceprotocol_proto_init() {
	if File_grpc_ce_protocol_ceprotocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SessionHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TaskDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TaskHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TaskSetHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*TaskSetStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TaskSetResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TaskAdderResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*MapAdder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ReduceAdder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*TransformAdder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*TaskSetProgressReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ProxyBlockChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_ce_protocol_ceprotocol_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ProxyBlockHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_ce_protocol_ceprotocol_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_grpc_ce_protocol_ceprotocol_proto_goTypes,
		DependencyIndexes: file_grpc_ce_protocol_ceprotocol_proto_depIdxs,
		EnumInfos:         file_grpc_ce_protocol_ceprotocol_proto_enumTypes,
		MessageInfos:      file_grpc_ce_protocol_ceprotocol_proto_msgTypes,
	}.Build()
	File_grpc_ce_protocol_ceprotocol_proto = out.File
	file_grpc_ce_protocol_ceprotocol_proto_rawDesc = nil
	file_grpc_ce_protocol_ceprotocol_proto_goTypes = nil
	file_grpc_ce_protocol_ceprotocol_proto_depIdxs = nil
}
